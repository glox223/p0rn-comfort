#!/usr/bin/perl -w
# $Id: p0rn-download,v 1.12 2005-10-30 18:19:57 mitch Exp $
#
# download selected p0rn
#
# 2004 (C) by Christian Garbs <mitch@cgarbs.de>
# Licensed under GNU GPL.  See COPYING for details.

use strict;
use P0rn::DB;
use P0rn::Static;

=head1 NAME

p0rn-download - download URLs queued in p0rn database

=head1 SYNOPSIS

B<p0rn-download>

=head1 OVERVIEW

p0rn-download starts to download the URLs queued in the p0rn database.

=head1 DESCRIPTION

p0rn-download starts a massive parallel download via L<p0rn-grab(1)>.
Downloaded files appear in B<./out>.

=head1 FILES

All data is stored in a database.  By default, it is located in
B<./p0rn.db> (yes, that's the directory from which you're starting
p0rn-download).  If you want to change this, set the environment
variable B<P0RNDBLOCATION> (the second letter is a zero) to another
path and filename.

=head1 SEE ALSO

L<p0rn-proxy(1)>, L<p0rn-dbdump(1)>, L<p0rn-dbrestore(1)>, L<p0rn-grab(1)>

=head1 MODULES NEEDED

 use DBM::Deep;

This module can be obtained at <F<http://www.cpan.org>>.

=head1 PROGRAMS NEEDED

=over

=item lynx: L<http://lynx.browser.org/>

=item wget: L<http://wget.sunsite.dk/>

=back

=head1 BUGS

Please report bugs by mail to <F<p0rn-bugs@cgarbs.de>>.

=head1 AUTHOR

p0rn-download was written by Christian Garbs <F<mitch@cgarbs.de>>.

=head1 AVAILABILITY

Look for updates at L<http://www.cgarbs.de/p0rn-comfort.en.html>.

=head1 COPYRIGHT

p0rn-download is licensed under the GNU GPL.

=cut

my $wait_after_download = 10;
my $wait_for_finish     = 30;
my $quit = 0;

$SIG{CHLD} = 'IGNORE';
$SIG{HUP} = sub { $quit++ };

my $dbh = opendb();
    
my $count = 0;

my @urls;

my $sth = $dbh->prepare('SELECT * FROM URLs WHERE type = 1 AND status = 2');
$sth->execute();
while (my $ref = $sth->fetchrow_hashref()) {
    push @urls, $ref->{url};
}
$dbh->disconnect();

print '' . scalar @urls . " urls to go.\n";

foreach my $url (@urls) {
    if (!fork()) {
	my $dbh = opendb();
	warn "${Static::YELLOW}[[ START $url ]]${Static::NORMAL}\n";
	my $ref = geturi($dbh, $url);
	exit unless exists $ref->{type};
	exit unless $ref->{type}   == 1;
	exit unless $ref->{status} == 2;
	
	seturi($dbh, $url, 1, 3);
	system('./p0rn-grab', $url);
	
	seturi($dbh, $url, 1, 4);
	warn "${Static::GREEN}[[ FINISHED $url ]]${Static::NORMAL}\n";
	$dbh->disconnect();
	exit;
    }
    
    last if $quit;
    sleep $wait_after_download;
    last if $quit;

    # maximum 12 connections
    while (`ps aux | grep [p]0rn-grab | wc -l` > 24) {
	sleep $wait_for_finish;
        last if $quit;
    }

    last if $quit;

}
warn "\n${Static::RED}[[ WAITING FOR CHILD PROCESSES. ]]${Static::NORMAL}\n\n";

wait;
warn "\n${Static::RED}[[ FINISHED. ]]${Static::NORMAL}\n\n";
